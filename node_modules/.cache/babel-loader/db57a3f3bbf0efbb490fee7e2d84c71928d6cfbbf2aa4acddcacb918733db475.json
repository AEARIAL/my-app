{"ast":null,"code":"const fetchData = async () => {\n  setLoading(true);\n  const cachedProducts = localStorage.getItem('products');\n  if (cachedProducts) {\n    const productsData = JSON.parse(cachedProducts);\n    const sortedProducts = productsData.sort((a, b) => a.name.localeCompare(b.name)); // 名称順にソート\n    setProducts(sortedProducts);\n    setFilteredProducts(sortedProducts); // 初期値を設定\n  } else {\n    try {\n      const itemNameResponse = await fetch('https://aearial.github.io/my-app/items/ItemName.csv');\n      const itemNameText = await itemNameResponse.text();\n      const itemNameData = Papa.parse(itemNameText, {\n        header: false\n      }).data;\n      const itemFlavResponse = await fetch('https://aearial.github.io/my-app/items/ItemFlav.csv');\n      const itemFlavText = await itemFlavResponse.text();\n      const itemFlavData = Papa.parse(itemFlavText, {\n        header: false\n      }).data;\n      const parsedProducts = itemNameData.map((row, index) => ({\n        id: index + 1,\n        name: row[1],\n        description: itemFlavData[index] ? itemFlavData[index][1] : '説明なし',\n        image: `https://aearial.github.io/my-app/items/${index + 1}.png`,\n        price: index % 5 + 3\n      }));\n      const sortedProducts = parsedProducts.sort((a, b) => a.name.localeCompare(b.name)); // 名称順にソート\n      setProducts(sortedProducts);\n      setFilteredProducts(sortedProducts); // 初期値を設定\n      localStorage.setItem('products', JSON.stringify(sortedProducts));\n    } catch (error) {\n      console.error('データの読み込みに失敗しました:', error);\n    }\n  }\n  setLoading(false);\n};\n\n// 商品データが変わったときにフィルタリングとソートを再適用\nuseEffect(() => {\n  filterAndSortProducts();\n}, [products]); // 商品データが変更されたときに実行\n\n// フィルタリングとソート\nconst filterAndSortProducts = () => {\n  let filtered = products.filter(product => {\n    return (product.name.toLowerCase().includes(searchQuery.toLowerCase()) || product.description.toLowerCase().includes(searchQuery.toLowerCase())) && product.price >= minPrice && product.price <= maxPrice;\n  });\n  if (sortOrder === 'asc') {\n    filtered = filtered.sort((a, b) => a.price - b.price);\n  } else if (sortOrder === 'desc') {\n    filtered = filtered.sort((a, b) => b.price - a.price);\n  }\n  setFilteredProducts(filtered);\n};","map":{"version":3,"names":["fetchData","setLoading","cachedProducts","localStorage","getItem","productsData","JSON","parse","sortedProducts","sort","a","b","name","localeCompare","setProducts","setFilteredProducts","itemNameResponse","fetch","itemNameText","text","itemNameData","Papa","header","data","itemFlavResponse","itemFlavText","itemFlavData","parsedProducts","map","row","index","id","description","image","price","setItem","stringify","error","console","useEffect","filterAndSortProducts","products","filtered","filter","product","toLowerCase","includes","searchQuery","minPrice","maxPrice","sortOrder"],"sources":["C:/Users/koki8/my-app/src/ProductList.js"],"sourcesContent":["const fetchData = async () => {\r\n  setLoading(true);\r\n  const cachedProducts = localStorage.getItem('products');\r\n  if (cachedProducts) {\r\n    const productsData = JSON.parse(cachedProducts);\r\n    const sortedProducts = productsData.sort((a, b) => a.name.localeCompare(b.name)); // 名称順にソート\r\n    setProducts(sortedProducts);\r\n    setFilteredProducts(sortedProducts); // 初期値を設定\r\n  } else {\r\n    try {\r\n      const itemNameResponse = await fetch('https://aearial.github.io/my-app/items/ItemName.csv');\r\n      const itemNameText = await itemNameResponse.text();\r\n      const itemNameData = Papa.parse(itemNameText, { header: false }).data;\r\n\r\n      const itemFlavResponse = await fetch('https://aearial.github.io/my-app/items/ItemFlav.csv');\r\n      const itemFlavText = await itemFlavResponse.text();\r\n      const itemFlavData = Papa.parse(itemFlavText, { header: false }).data;\r\n\r\n      const parsedProducts = itemNameData.map((row, index) => ({\r\n        id: index + 1,\r\n        name: row[1],\r\n        description: itemFlavData[index] ? itemFlavData[index][1] : '説明なし',\r\n        image: `https://aearial.github.io/my-app/items/${index + 1}.png`,\r\n        price: index % 5 + 3,\r\n      }));\r\n      const sortedProducts = parsedProducts.sort((a, b) => a.name.localeCompare(b.name)); // 名称順にソート\r\n      setProducts(sortedProducts);\r\n      setFilteredProducts(sortedProducts); // 初期値を設定\r\n      localStorage.setItem('products', JSON.stringify(sortedProducts));\r\n    } catch (error) {\r\n      console.error('データの読み込みに失敗しました:', error);\r\n    }\r\n  }\r\n  setLoading(false);\r\n};\r\n\r\n// 商品データが変わったときにフィルタリングとソートを再適用\r\nuseEffect(() => {\r\n  filterAndSortProducts();\r\n}, [products]); // 商品データが変更されたときに実行\r\n\r\n// フィルタリングとソート\r\nconst filterAndSortProducts = () => {\r\n  let filtered = products.filter(product => {\r\n    return (\r\n      (product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        product.description.toLowerCase().includes(searchQuery.toLowerCase())) &&\r\n      product.price >= minPrice &&\r\n      product.price <= maxPrice\r\n    );\r\n  });\r\n\r\n  if (sortOrder === 'asc') {\r\n    filtered = filtered.sort((a, b) => a.price - b.price);\r\n  } else if (sortOrder === 'desc') {\r\n    filtered = filtered.sort((a, b) => b.price - a.price);\r\n  }\r\n\r\n  setFilteredProducts(filtered);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}