{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koki8\\\\my-app\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport QuantityPopup from './QuantityPopup';\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = ({\n  addToCart\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  // CSVファイルを読み込み、商品の情報を取得\n  useEffect(() => {\n    fetch('/items/ja.csv').then(response => response.text()).then(csvData => {\n      Papa.parse(csvData, {\n        complete: result => {\n          const parsedData = result.data.map((row, index) => ({\n            id: index + 1,\n            name: row[0],\n            // ITEMx_NAME\n            description: row[1],\n            // ITEMx_FLAV\n            image: `/items/${index + 1}.png`,\n            price: Math.floor(Math.random() * 5000) + 1000 // ランダム価格\n          }));\n          setProducts(parsedData);\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5546\\u54C1\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          className: \"product-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA5\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedProduct(product),\n          children: \"\\u6570\\u91CF\\u9078\\u629E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedProduct && /*#__PURE__*/_jsxDEV(QuantityPopup, {\n      product: selectedProduct,\n      onClose: () => setSelectedProduct(null),\n      addToCart: addToCart // 親コンポーネントからのカート追加関数\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"vkC9d0Hi2vaeZt6FiFZShq2GrQU=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","Papa","QuantityPopup","jsxDEV","_jsxDEV","ProductList","addToCart","_s","products","setProducts","selectedProduct","setSelectedProduct","fetch","then","response","text","csvData","parse","complete","result","parsedData","data","map","row","index","id","name","description","image","price","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","product","src","alt","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/koki8/my-app/src/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport QuantityPopup from './QuantityPopup';\r\nimport './ProductList.css';\r\n\r\nconst ProductList = ({ addToCart }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  // CSVファイルを読み込み、商品の情報を取得\r\n  useEffect(() => {\r\n    fetch('/items/ja.csv')\r\n      .then((response) => response.text())\r\n      .then((csvData) => {\r\n        Papa.parse(csvData, {\r\n          complete: (result) => {\r\n            const parsedData = result.data.map((row, index) => ({\r\n              id: index + 1,\r\n              name: row[0],  // ITEMx_NAME\r\n              description: row[1],  // ITEMx_FLAV\r\n              image: `/items/${index + 1}.png`,\r\n              price: Math.floor(Math.random() * 5000) + 1000,  // ランダム価格\r\n            }));\r\n            setProducts(parsedData);\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      <h2>商品一覧</h2>\r\n      <div className=\"product-grid\">\r\n        {products.map((product) => (\r\n          <div key={product.id} className=\"product-item\">\r\n            <img src={product.image} alt={product.name} className=\"product-image\" />\r\n            <h3>{product.name}</h3>\r\n            <p>¥{product.price}</p>\r\n            <button onClick={() => setSelectedProduct(product)}>数量選択</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedProduct && (\r\n        <QuantityPopup\r\n          product={selectedProduct}\r\n          onClose={() => setSelectedProduct(null)}\r\n          addToCart={addToCart}  // 親コンポーネントからのカート追加関数\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,eAAe,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjBf,IAAI,CAACgB,KAAK,CAACD,OAAO,EAAE;QAClBE,QAAQ,EAAGC,MAAM,IAAK;UACpB,MAAMC,UAAU,GAAGD,MAAM,CAACE,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;YAClDC,EAAE,EAAED,KAAK,GAAG,CAAC;YACbE,IAAI,EAAEH,GAAG,CAAC,CAAC,CAAC;YAAG;YACfI,WAAW,EAAEJ,GAAG,CAAC,CAAC,CAAC;YAAG;YACtBK,KAAK,EAAE,UAAUJ,KAAK,GAAG,CAAC,MAAM;YAChCK,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAG;UACnD,CAAC,CAAC,CAAC;UACHvB,WAAW,CAACW,UAAU,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAK6B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B9B,OAAA;MAAA8B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACblC,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B1B,QAAQ,CAACc,GAAG,CAAEiB,OAAO,iBACpBnC,OAAA;QAAsB6B,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC5C9B,OAAA;UAAKoC,GAAG,EAAED,OAAO,CAACX,KAAM;UAACa,GAAG,EAAEF,OAAO,CAACb,IAAK;UAACO,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxElC,OAAA;UAAA8B,QAAA,EAAKK,OAAO,CAACb;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBlC,OAAA;UAAA8B,QAAA,GAAG,MAAC,EAACK,OAAO,CAACV,KAAK;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBlC,OAAA;UAAQsC,OAAO,EAAEA,CAAA,KAAM/B,kBAAkB,CAAC4B,OAAO,CAAE;UAAAL,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJzDC,OAAO,CAACd,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL5B,eAAe,iBACdN,OAAA,CAACF,aAAa;MACZqC,OAAO,EAAE7B,eAAgB;MACzBiC,OAAO,EAAEA,CAAA,KAAMhC,kBAAkB,CAAC,IAAI,CAAE;MACxCL,SAAS,EAAEA,SAAU,CAAE;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9CIF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}